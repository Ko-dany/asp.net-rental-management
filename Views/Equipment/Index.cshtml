@using System.Text.RegularExpressions
@model IEnumerable<Midterm_EquipmentRental.Models.Equipment>
@{
    ViewData["Title"] = "Equipment";

    // read current filter from query or ViewBag.Status (controller can set ViewBag.Status = "All|Available|Rented")
    var current = (ViewBag.Status as string) ?? (Context.Request.Query["status"].ToString() ?? "All");

    string TabClass(string key) =>
        key switch
        {
            "All" => current == "All" ? "btn btn-primary" : "btn btn-outline-primary",
            "Available" => current == "Available" ? "btn btn-success" : "btn btn-outline-success",
            "Rented" => current == "Rented" ? "btn btn-warning" : "btn btn-outline-warning",
            _ => "btn btn-outline-secondary"
        };

    string BadgeClass(bool isAvailable) =>
        isAvailable ? "badge rounded-pill bg-success" : "badge rounded-pill bg-warning text-dark";

    string StatusText(bool isAvailable) => isAvailable ? "Available" : "Rented";

    // Pretty print enum names like HeavyMachinery -> Heavy Machinery, PowerTools -> Power Tools
    string Humanize(string pascal) => Regex.Replace(pascal, "([a-z])([A-Z])", "$1 $2");
}

<div class="container mt-4">

    <!-- Header + Add button -->
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2 class="mb-0">Equipment</h2>
        <a asp-controller="Equipment" asp-action="Create" class="btn btn-primary">Add New Equipment</a>
    </div>

    <!-- Filter pills -->
    <div class="btn-group mb-3" role="group" aria-label="Filters">
        <a asp-controller="Equipment" asp-action="GetAllEquipment" class="@TabClass("All")">All Equipment</a>
        <a asp-controller="Equipment" asp-action="GetAllAvailableEquipment" class="@TabClass("Available")">Available</a>
        <a asp-controller="Equipment" asp-action="GetAllRentedEquipment" class="@TabClass("Rented")">Rented</a>
    </div>

    <!-- Table -->
    <div class="table-responsive">
        <table class="table table-striped table-hover align-middle">
            <thead class="table-dark">
                <tr>
                    <th style="width:6rem;">ID</th>
                    <th>Name</th>
                    <th>Category</th>
                    <th>Condition</th>
                    <th>Status</th>
                    <th>Created At</th>
                    <th class="text-end" style="width:10rem;">Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@item.Id</td>
                        <td>@item.Name</td>
                        <td>@Humanize(item.Category.ToString())</td>
                        <td>@item.Condition</td>
                        <td>
                            <span class="@BadgeClass(item.IsAvailable)">@StatusText(item.IsAvailable)</span>
                        </td>
                        <td>
                            @item.CreatedAt.ToString("yyyy-MM-dd HH:mm")
                        </td>
                        <td class="text-end">
                            <a asp-controller="Equipment" asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-outline-primary me-2">Edit</a>
                            <form asp-controller="Equipment" asp-action="Delete" asp-route-id="@item.Id" method="post" class="d-inline">
                                @Html.AntiForgeryToken()
                                <button type="submit" class="btn btn-sm btn-outline-danger">Delete</button>
                            </form>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>