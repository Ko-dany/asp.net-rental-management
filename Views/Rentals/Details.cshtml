@model Midterm_EquipmentRental.Models.ViewModels.RentalDetailsViewModel
@using Midterm_EquipmentRental.Models

@{
    ViewData["Title"] = "Rental Details";

    var r = Model.Rental;

    bool isReturned = r.Status == RentalStatus.Returned && r.ReturnedAt != default;
    bool isOverdue = r.Status == RentalStatus.Overdue;
    bool isActive = r.Status == RentalStatus.Active;

    string StatusBadge(RentalStatus status) =>
        status == RentalStatus.Overdue ? "badge rounded-pill bg-danger" :
        status == RentalStatus.Returned ? "badge rounded-pill bg-success" :
                                          "badge rounded-pill bg-warning text-dark";

    string StatusText(RentalStatus status) =>
        status == RentalStatus.Returned ? "Completed" :
        status == RentalStatus.Active ? "Active" : "Overdue";

    string FormatDuration(DateTime start, DateTime? end)
    {
        var ts = (end ?? DateTime.Now) - start;
        if (ts.TotalSeconds < 0) ts = TimeSpan.Zero;
        return $"{(int)ts.TotalDays} day(s) , {ts.Hours} hour(s)";
    }

    var customerLine =
    !string.IsNullOrWhiteSpace(Model.CustomerName) && !string.IsNullOrWhiteSpace(Model.CustomerUserName)
        ? $"{Model.CustomerName} ({Model.CustomerUserName})"
        : !string.IsNullOrWhiteSpace(Model.CustomerName)
            ? Model.CustomerName!
            : $"Customer ID: {r.CustomerId}";

    var equipmentLine =
        !string.IsNullOrWhiteSpace(Model.EquipmentName)
            ? Model.EquipmentName!
            : $"Equipment ID: {r.EquipmentId}";
}

<div class="container mt-4">
    <h2 class="mb-4">Rental Details</h2>

    <div class="row g-4">
        <!-- Left: Summary card -->
        <div class="col-lg-8">
            <div class="card">
                <div class="card-body">
                    <div class="row mb-2">
                        <div class="col-4 fw-semibold">Rental ID</div>
                        <div class="col-8">@r.Id</div>
                    </div>

                    <div class="row mb-2">
                        <div class="col-4 fw-semibold">Customer</div>
                        <div class="col-8">@customerLine <a asp-controller="View" asp-action="GetCustomerDetails" asp-route-id="@r.CustomerId" class="btn btn-outline-secondary">View Customer Details</a></div>
                    </div>

                    <div class="row mb-2">
                        <div class="col-4 fw-semibold">Equipment</div>
                        <div class="col-8">@equipmentLine</div>
                    </div>

                    <div class="row mb-2">
                        <div class="col-4 fw-semibold">Issue Date</div>
                        <div class="col-8">@r.IssuedAt.ToString("MMM. dd, yyyy HH:mm")</div>
                    </div>

                    <div class="row mb-2">
                        <div class="col-4 fw-semibold">Return Date</div>
                        <div class="col-8">
                            @(isReturned? r.ReturnedAt?.ToString("MMM. dd, yyyy HH:mm") : "Not returned yet")
                        </div>
                    </div>

                    <div class="row mb-2">
                        <div class="col-4 fw-semibold">Status</div>
                        <div class="col-8">
                            <span class="@StatusBadge(r.Status)">@StatusText(r.Status)</span>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-4 fw-semibold">Current Duration</div>
                        <div class="col-8">
                            @FormatDuration(r.IssuedAt, isReturned ? r.ReturnedAt : null)
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Right: Actions -->
        <div class="col-lg-4">
            <div class="card mb-3">
                <div class="card-header fw-semibold">Actions</div>
                <div class="card-body d-grid gap-3">
                    <a asp-controller="View" asp-action="GetExtendRental" asp-route-id="@r.Id" class="btn btn-warning text-dark">Edit/Extend Rental</a>
                    <form asp-controller="View" asp-action="CancelRental" asp-route-id="@r.Id"
                          method="post" class="d-inline"
                          onsubmit="return confirm('Cancel this rental?');">
                        @Html.AntiForgeryToken()
                        <button type="submit" class="btn btn-danger">Cancel Rental</button>
                    </form>
                    <form asp-controller="View" asp-action="ReturnRental" method="post" class="d-inline">
                        <input type="hidden" name="Id" value="@r.Id" />
                        <input type="hidden" name="EquipmentId" value="@r.EquipmentId" />
                        <input type="hidden" name="CustomerId" value="@r.CustomerId" />
                        <input type="hidden" name="IssuedAt" value="@r.IssuedAt.ToString("o")" />
                        <input type="hidden" name="ReturnedAt" value="@r.ReturnedAt?.ToString("o")" />
                        <input type="hidden" name="Status" value="@r.Status" />

                        <button type="submit" class="btn btn-success">Mark as Returned</button>
                    </form>
                    <a asp-controller="View" asp-action="GetAllRentals" class="btn btn-outline-secondary">Back to Rentals</a>
                </div>
            </div>

            <!-- Status note -->
            <div class="card">
                <div class="card-header fw-semibold @(isOverdue ? "bg-danger text-white" : isActive ? "bg-warning" : "bg-success text-white")">
                    @(isOverdue ? "Overdue Rental" : isActive ? "Active Rental" : "Completed Rental")
                </div>
                <div class="card-body">
                    @if (isOverdue)
                    {
                        <p class="mb-0">This rental is overdue and requires immediate attention.</p>
                    }
                    else if (isActive)
                    {
                        <p class="mb-0">This equipment is currently rented out and needs to be returned.</p>
                    }
                    else
                    {
                        <p class="mb-0">This rental is completed. No further action is required.</p>
                    }
                </div>
            </div>
        </div>
    </div>
</div>