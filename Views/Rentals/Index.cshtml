@model IEnumerable<Midterm_EquipmentRental.Models.Rental>
@using System.Globalization

@{
    ViewData["Title"] = "Overdue Rentals";

    // Optional maps provided by controller; will fall back to IDs if absent.
    var eqNames = ViewBag.EquipmentNames as IDictionary<int, string> ?? new Dictionary<int, string>();
    var custNames = ViewBag.CustomerNames as IDictionary<int, string> ?? new Dictionary<int, string>();

    // Consider rentals overdue if kept more than this many days
    const int graceDays = 7;

    int DaysOverdue(DateTime issuedAt)
    {
        var d = (int)Math.Floor((DateTime.Now - issuedAt).TotalDays) - graceDays;
        return d < 0 ? 0 : d;
    }

    string StatusBadge(Midterm_EquipmentRental.Models.RentalStatus status)
        => "badge rounded-pill bg-danger"; // all shown here are Overdue (red)

    string DaysBadgeClass(int days)
        => "badge rounded-pill bg-danger";

    var overdues = Model?.ToList() ?? new List<Midterm_EquipmentRental.Models.Rental>();
    var count = overdues.Count;

    // Stats
    var daysList = overdues.Select(r => DaysOverdue(r.IssuedAt)).Where(d => d > 0).ToList();
    double avgDays = daysList.Count > 0 ? daysList.Average() : 0;
    int maxDays = daysList.Count > 0 ? daysList.Max() : 0;

    string FormatDate(DateTime dt) => dt.ToString("yyyy-MM-dd HH:mm", CultureInfo.InvariantCulture);
}

<div class="container mt-4">

    <!-- Header row -->
    <div class="d-flex justify-content-between align-items-center mb-3">
        <div>
            <h2 class="mb-0">Overdue Rentals</h2>
            <p class="text-muted mb-0">Equipment rented for more than @graceDays days</p>
        </div>
        <a asp-controller="Rentals" asp-action="Index" class="btn btn-secondary">Back to All Rentals</a>
    </div>

    <!-- Alert -->
    <div class="alert alert-warning border rounded-3" role="alert">
        <div class="fw-semibold">@count Overdue Rental(s) Found</div>
        <div class="small">The following rentals are overdue and require immediate attention.</div>
    </div>

    <!-- Table -->
    <div class="table-responsive mb-4">
        <table class="table table-hover align-middle">
            <thead style="background:#f5d5d7;" class="fw-semibold">
                <tr>
                    <th>Rental ID</th>
                    <th>Equipment</th>
                    <th>Customer</th>
                    <th>Issued At</th>
                    <th>Days Overdue</th>
                    <th>Status</th>
                    <th class="text-end">Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var r in overdues)
                {
                    var days = DaysOverdue(r.IssuedAt);
                    <tr>
                        <td>@r.Id</td>
                        <td>@(eqNames.TryGetValue(r.EquipmentId, out var en) ? en : $"#@r.EquipmentId")</td>
                        <td>@(custNames.TryGetValue(r.CustomerId, out var cn) ? cn : $"#@r.CustomerId")</td>
                        <td>@FormatDate(r.IssuedAt)</td>
                        <td>
                            <span class="@DaysBadgeClass(days)">@days days</span>
                        </td>
                        <td>
                            <span class="@StatusBadge(r.Status)">Overdue</span>
                        </td>
                        <td class="text-end">
                            <a asp-controller="Rentals" asp-action="Details" asp-route-id="@r.Id" class="btn btn-sm btn-outline-info me-2">Details</a>
                            <a asp-controller="Rentals" asp-action="Extend" asp-route-id="@r.Id" class="btn btn-sm btn-outline-warning me-2">Extend</a>
                            <form asp-controller="Rentals" asp-action="ForceReturn" asp-route-id="@r.Id" method="post" class="d-inline"
                                  onsubmit="return confirm('Force return this rental?');">
                                @Html.AntiForgeryToken()
                                <button type="submit" class="btn btn-sm btn-outline-danger">Force Return</button>
                            </form>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Bottom panels -->
    <div class="row g-4">
        <div class="col-lg-6">
            <div class="card border-warning">
                <div class="card-header fw-semibold" style="background:#ffc107;">Management Actions</div>
                <div class="card-body">
                    <p class="mb-2">For overdue rentals, you can:</p>
                    <ul class="mb-0">
                        <li><strong>Extend:</strong> Give the customer more time</li>
                        <li><strong>Force Return:</strong> Immediately return the equipment</li>
                        <li><strong>Contact Customer:</strong> Follow up on the rental</li>
                    </ul>
                </div>
            </div>
        </div>
        <div class="col-lg-6">
            <div class="card border-info">
                <div class="card-header fw-semibold text-white" style="background:#0dcaf0;">Statistics</div>
                <div class="card-body">
                    <p class="mb-2"><strong>Total Overdue:</strong> @count</p>
                    <p class="mb-2"><strong>Average Days Overdue:</strong> @avgDays.ToString("0.0")</p>
                    <p class="mb-0"><strong>Longest Overdue:</strong> @maxDays days</p>
                </div>
            </div>
        </div>
    </div>
</div>