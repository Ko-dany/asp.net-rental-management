@model Midterm_EquipmentRental.Models.ViewModels.EquipmentListViewModel
@using System.Text.RegularExpressions

@{
    ViewData["Title"] = "Equipment";

    // Role toggle (can be set in controller via Model.IsAdmin)
    bool isAdmin = Model?.IsAdmin ?? false;

    // Current filter (All / Available / Rented)
    string current = (Model?.Filter ?? "All")?.Trim()!;
    // Defensive copy of items
    var allItems = (Model?.Items ?? Enumerable.Empty<Midterm_EquipmentRental.Models.Equipment>()).ToList();

    // Apply filter in-view (until controller wires up real routes)
    IEnumerable<Midterm_EquipmentRental.Models.Equipment> items = current switch
    {
        "Available" => allItems.Where(e => e.IsAvailable),
        "Rented" => allItems.Where(e => !e.IsAvailable),
        _ => allItems
    };

    // Little helpers
    string TabClass(string key) =>
        key == "All" ? (current == "All" ? "btn btn-primary" : "btn btn-outline-primary") :
        key == "Available" ? (current == "Available" ? "btn btn-success" : "btn btn-outline-success") :
        key == "Rented" ? (current == "Rented" ? "btn btn-warning" : "btn btn-outline-warning") :
                             "btn btn-outline-secondary";

    string StatusBadge(bool isAvailable) =>
        isAvailable ? "badge rounded-pill bg-success" : "badge rounded-pill bg-warning text-dark";

    string StatusText(bool isAvailable) => isAvailable ? "Available" : "Rented";

    string Humanize(string pascal) => Regex.Replace(pascal, "([a-z])([A-Z])", "$1 $2");
}

<div class="container mt-4">

    <!-- Header + Add button (admin only) -->
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2 class="mb-0">Equipment</h2>
        @if (isAdmin)
        {
            <a asp-controller="View" asp-action="AddEquipment" class="btn btn-primary">Add New Equipment</a>
        }
    </div>

    <!-- Filter tabs (just # for now) -->
    <div class="btn-group mb-3" role="group" aria-label="Filters">
        <a asp-controller="View" asp-action="GetAllEquipment" class="@TabClass("All")">All Equipment</a>
        <a asp-controller="View" asp-action="GetAllAvailableEquipment" class="@TabClass("Available")">Available</a>
        @if (isAdmin)
        {
            <a asp-controller="View" asp-action="GetAllRentedEquipment" class="@TabClass("Rented")">Rented</a>
        }
    </div>

    <!-- Table -->
    <div class="table-responsive">
        <table class="table table-striped table-hover align-middle">
            <thead class="table-dark">
                <tr>
                    <th style="width:6rem;">ID</th>
                    <th>Name</th>
                    <th>Category</th>
                    <th>Condition</th>
                    <th>Status</th>
                    <th>Created At</th>
                    <th class="text-end" style="width:10rem;">Actions</th>          
                </tr>
            </thead>
            <tbody>
                @foreach (var e in items)
                {
                    <tr>
                        <td>@e.Id</td>
                        <td>@e.Name</td>
                        <td>@Humanize(e.Category.ToString())</td>
                        <td>@e.Condition</td>
                        <td>
                            <span class="@StatusBadge(e.IsAvailable)">@StatusText(e.IsAvailable)</span>
                        </td>
                        <td>@e.CreatedAt.ToString("yyyy-MM-dd HH:mm")</td>

                        @if (isAdmin)
                        {
                            <td class="text-end">
                                <a asp-controller="View" asp-action="GetEquipmentDetails" asp-route-id="@e.Id" class="btn btn-sm btn-outline-primary me-2">Details</a>
                                <a asp-controller="View" asp-action="UpdateEquipment" asp-route-id="@e.Id" class="btn btn-sm btn-outline-primary me-2">Edit</a>
                                <form asp-controller="View" asp-action="DeleteEquipment" asp-route-id="@e.Id" method="post" class="d-inline" onsubmit="return confirm('Delete this equipment?');">
                                    @Html.AntiForgeryToken()
                                    <button type="submit" class="btn btn-sm btn-outline-danger">Delete</button>
                                </form>
                            </td>
                        } 
                        else
                        {
                            <td class="text-end">
                                <a asp-controller="View" asp-action="GetEquipmentDetails" asp-route-id="@e.Id" class="btn btn-sm btn-outline-primary me-2">Details</a>
                            </td>
                        }
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>